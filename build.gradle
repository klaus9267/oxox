buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.2' // restdocsApiSpecVersion 버전 변수 설정
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.18.4'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'kimandhong'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.1.RELEASE'

    // h2 for test
    testImplementation 'com.h2database:h2'
    runtimeOnly 'com.h2database:h2'

    // lombok
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //	spring rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.4'

    //  swager
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // queryDsl -> change query for "exists"
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    dependsOn test
    configurations 'asciidoctorExt'
    inputs.dir snippetsDir

    sources {
        include("**/index.adoc", "**/common/*.adoc")
    }
    doFirst {
        delete file('src/main/resources/static/docs')
    }
    baseDirFollowsSourceFile()
}

task copyDocument(type: Copy) {
    dependsOn ('asciidoctor', ':openapi3')
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

openapi3 {
    server = "http://localhost:8080"
    title = "OXOX API 문서"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    format = 'json'
    outputDirectory = 'build/resources/main/static/docs/swagger'
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn copyDocument
}
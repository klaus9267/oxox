name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

permissions:
  contents: read

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: make configs files
      run: |
        cd ./src/main/resources
        touch ./application-db.yml
        touch ./application-auth.yml
        touch ./application-server.yml
        touch ./application-swagger.yml
        touch ./application-aws.yml
        echo "${{ secrets.DB }}" >> ./application-db.yml
        echo "${{ secrets.AUTH }}" >> ./application-auth.yml
        echo "${{ secrets.SERVER }}" >> ./application-server.yml
        echo "${{ secrets.SWAGGER }}" >> ./application-swagger.yml
        echo "${{ secrets.AWS }}" >> ./application-aws.yml
      shell: bash   

    - name: Build with Gradle
      run: |
        sudo chmod +x ./gradlew
        ./gradlew bootJar

    - name: docker login
      run: docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKER_ID }}/oxox-backend .

    - name: docker push
      run: docker push ${{ secrets.DOCKER_ID }}/oxox-backend

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          sudo docker compose down
          sudo docker pull ${{ secrets.DOCKER_ID }}/oxox-backend
          sudo docker image prune -f
          sudo docker compose up -d

